#
# Copyright 2015 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es
#

--NAME--
Shorter Federation Test

--SHELL-INIT--
dbInit CP1
dbInit CP2
dbInit CP3
brokerStart CP1 0
brokerStart CP2 0
brokerStart CP3 0

--SHELL--

#
# 01. Make CP2 subscribe to all entities in CP1
# 02. Make CP3 subscribe to all entities in CP2
# 03. Create an entity in CP1 (CP2 should get informed and after that CP3 also)
# 04. Query CP3 for entity
# 05. Update an entity in CP1 (CP2 should get informed and after that CP3 also)
# 06. Query CP3 for entity
#


echo "01. Make CP2 subscribe to all entities in CP1"
echo "============================================="
payload='
{
  "description": "TEST",
  "subject": {
    "entities": [{
      "idPattern": ".*"
    }]
  },
  "notification": {
    "http": {
      "url": "http://localhost:'$CP2_PORT'/v2/op/notify"
    }
  },
  "expires": "2040-01-01T14:00:00.00Z",
  "throttling": 0
}'
orionCurl --url /v2/subscriptions --payload "$payload" --port $CP1_PORT
echo
echo


echo "02. Make CP3 subscribe to all entities in CP2"
echo "============================================="
payload='
{
  "description": "TEST",
  "subject": {
    "entities": [{
      "idPattern": ".*"
    }]
  },
  "notification": {
    "http": {
      "url": "http://localhost:'$CP3_PORT'/v2/op/notify"
    }
  },
  "expires": "2040-01-01T14:00:00.00Z",
  "throttling": 0
}'
orionCurl --url /v2/subscriptions --payload "$payload" --port $CP2_PORT
echo
echo


echo "03. Create an entity in CP1 (CP2 should get informed and after that CP3 also)"
echo "============================================================================="
payload='
{
  "actionType": "APPEND",
  "entities": [
  {
    "id": "geo-json-point",
    "location": {
      "metadata": {},
      "type": "geo:json",
      "value": {
      	"coordinates":
      	  [30, 10],
      	"type": "Point"
      }
    },
    "type": "type"
  }
  ]
}'
orionCurl --url /v2/op/update --payload "$payload" --port $CP1_PORT
echo
echo


echo "04. Query CP3 for entity geo-json-point"
echo "======================================="
orionCurl --url /v2/entities/geo-json-point --port $CP3_PORT
echo
echo


echo "05. Update an entity in CP1 (CP2 should get informed and after that CP3 also)"
echo "============================================================================="
payload='
{
  "actionType": "UPDATE",
  "entities": [
  {
    "id": "geo-json-point",
    "location": {
      "metadata": {},
      "type": "geo:json",
      "value": {
      	"coordinates":
      	  [60, 20],
      	"type": "Point"
      }
    },
    "type": "type"
  }
  ]
}'
orionCurl --url /v2/op/update --payload "$payload" --port $CP1_PORT
echo
echo


echo "06. Query CP3 for entity geo-json-point"
echo "======================================="
orionCurl --url /v2/entities/geo-json-point --port $CP3_PORT
echo
echo


--REGEXPECT--
01. Make CP2 subscribe to all entities in CP1
=============================================
HTTP/1.1 201 Created
Content-Length: 0
Location: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



02. Make CP3 subscribe to all entities in CP2
=============================================
HTTP/1.1 201 Created
Content-Length: 0
Location: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



03. Create an entity in CP1 (CP2 should get informed and after that CP3 also)
=============================================================================
HTTP/1.1 204 No Content
Content-Length: 0
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



04. Query CP3 for entity geo-json-point
=======================================
HTTP/1.1 200 OK
Content-Length: REGEX(.*)
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "id": "geo-json-point",
    "location": {
        "metadata": {},
        "type": "geo:json",
        "value": {
            "coordinates": [
                30,
                10
            ],
            "type": "Point"
        }
    },
    "type": "type"
}


05. Update an entity in CP1 (CP2 should get informed and after that CP3 also)
=============================================================================
HTTP/1.1 204 No Content
Content-Length: 0
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



06. Query CP3 for entity geo-json-point
=======================================
HTTP/1.1 200 OK
Content-Length: REGEX(.*)
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "id": "geo-json-point",
    "location": {
        "metadata": {},
        "type": "geo:json",
        "value": {
            "coordinates": [
                60,
                20
            ],
            "type": "Point"
        }
    },
    "type": "type"
}


--TEARDOWN--
brokerStop CP1
brokerStop CP2
brokerStop CP3
dbDrop CP1
dbDrop CP2
dbDrop CP3
